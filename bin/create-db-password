#!/bin/bash

if [[ "${BASH_SOURCE[0]}" != "${0}" ]]; then
  echo "This script is intended to be run, not sourced." >&2
  return 1
fi

set -e

set_db_password() {
  printf '%s' "$1" | podman secret create quipucords-db-password --replace -
  podman secret ls --filter name=quipucords-db-password
}

generate_and_set_password() {
  local db_pass
  db_pass=$(head -c 16 /dev/urandom | base64 | tr -dc 'a-zA-Z0-9')
  set_db_password "${db_pass}"
}

prompt_and_set_password() {
  local db_pass
  read -srp "Enter the new DB server password: " db_pass
  echo
  [[ -z "${db_pass}" ]] && echo "The DB server password cannot be blank." >&2 && exit 1
  read -srp "Re-enter the password: " db_pass2
  echo
  [[ ! "${db_pass}" = "${db_pass2}" ]] && echo "DB server passwords do not match." >&2 && exit 1
  set_db_password "${db_pass}"
}

generate_or_prompt_password() {
  while true; do
    read -rp "Automatically generate a new DB server password? [y/n]: " yn
    case $yn in
    [Yy])
      generate_and_set_password
      exit
      ;;
    [Nn])
      prompt_and_set_password
      exit
      ;;
    esac
  done
}

while getopts "Yy" opt; do
  case $opt in
  [Yy])
    generate_and_set_password
    exit
    ;;
  *) ;;
  esac
done

generate_or_prompt_password
